{"version":3,"sources":["images/map-min.png","firebase.js","routes/AppHome.js","auth/Auth.js","routes/Landing.js","routes/Login.js","routes/SignUp.js","auth/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fbase","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AppHome","onClick","FBase","auth","signOut","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","Provider","value","withRouter","useContext","className","href","to","icon","once","src","LandingImage","alt","history","inProp","setInProp","login","setLogin","handleLogin","useCallback","event","a","preventDefault","target","elements","email","password","signInWithEmailAndPassword","push","alert","handleSignUp","createUserWithEmailAndPassword","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","name","type","placeholder","PrivateRoute","RouteComponent","component","rest","render","routeProps","library","add","faCoffee","faSignInAlt","faCode","faDesktop","faLanguage","faGlobeAmericas","fab","App","basename","exact","path","Landing","Login","SignUp","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a26a7175.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map-min.9470e17c.png\";","import * as firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst fbase = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\r\n})\r\n\r\nexport default fbase","import React from 'react'\r\nimport FBase from '../firebase'\r\n\r\nfunction AppHome() {\r\n    return (\r\n        <div>\r\n            <h1> app </h1>\r\n            <button onClick={() => FBase.auth().signOut()}> Sign out </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHome\r\n","import React, { useEffect, useState } from 'react'\r\nimport FBase from '../firebase.js'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    FBase.auth().onAuthStateChanged(setCurrentUser)\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport '../styles/Landing.css'\r\nimport LandingImage from '../images/map-min.png'\r\n\r\nimport { HashRouter as Router, Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport { AuthContext } from '../auth/Auth'\r\nimport LazyLoad from 'react-lazyload';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nfunction Landing() {\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"py-2\">\r\n        <nav className=\"landing-nav mx-auto px-4\">\r\n          <h1 className=\"mr-2\"> wander </h1>\r\n          <span className=\"mx-2 hline\"> | </span>\r\n          <a className=\"mx-2\" href=\"./\"> downloads </a>\r\n          <a className=\"mx-2\" href=\"./\"> documentation </a>\r\n          <a className=\"mx-2\" href=\"./\"> support </a>\r\n          {!currentUser ?\r\n            <Link to=\"/login\" className=\"ml-auto\">\r\n              <button className=\"ml-auto outline-button\">\r\n                login &nbsp;<FontAwesomeIcon icon=\"sign-in-alt\" />\r\n              </button>\r\n            </Link>\r\n            :\r\n            <Link to=\"/app\" className=\"ml-auto\">\r\n              <button className=\"ml-auto outline-button\">\r\n                wander &nbsp;<FontAwesomeIcon icon=\"globe-americas\" />\r\n              </button>\r\n            </Link>\r\n          }\r\n          <span className=\"mx-2 ml-3 hline\"> | </span>\r\n          <FontAwesomeIcon icon=\"language\" className=\"mx-2 py-1 med-icon\" />\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        <div className=\"content-section py-55\">\r\n          <h2 className=\"mb-2\"> for the lost, found, and in-betweens. </h2>\r\n          <p className=\"mb-4\"> A geolocative message board, based in every pocket of the world. Stay comfy near <br /> home or take a peek past undiscovered horizons. </p>\r\n          <div className=\"button-group\">\r\n            <button className=\"px-4 mx-2 fill-button\"> <FontAwesomeIcon icon=\"code\" className=\"active mr-2\" /> Open Web App </button>\r\n            <button className=\"px-4 mx-2 fill-button\"> <FontAwesomeIcon icon=\"desktop\" className=\"active mr-2\" /> Download for Windows </button>\r\n          </div>\r\n          <LazyLoad once >\r\n            <img className=\"mt-3 map-img\" src={LandingImage} alt=\"landing\"></img>\r\n          </LazyLoad>\r\n        </div>\r\n      </div>\r\n      <footer className=\"mb-4\">\r\n        <div className=\"footer-menu py-4 px-6\">\r\n          <div className=\"socials\">\r\n            <FontAwesomeIcon icon={[\"fab\", \"facebook-square\"]} />\r\n            <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\r\n            <FontAwesomeIcon icon={[\"fab\", \"youtube-square\"]} />\r\n            <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\r\n          </div>\r\n          <div className=\"footer-nav ml-4\">\r\n            <div className=\"mx-3 mb-3\">\r\n              <h3 className=\"mb-1\"> product </h3>\r\n              <ul>\r\n                <li> <a href=\"./\">web</a> </li>\r\n                <li> <a href=\"./\">desktop</a> </li>\r\n                <li> <a href=\"./\">ios</a> </li>\r\n                <li> <a href=\"./\">android</a> </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"px-3 mb-3\">\r\n              <h3 className=\"mb-1\"> wander for organizations </h3>\r\n              <ul>\r\n                <li> <a href=\"./\">schools</a> </li>\r\n                <li> <a href=\"./\">communities</a> </li>\r\n                <li> <a href=\"./\">businesses</a> </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"px-3 mb-3\">\r\n              <h3 className=\"mb-1\"> resources </h3>\r\n              <ul>\r\n                <li> <a href=\"./\">documentation</a> </li>\r\n                <li> <a href=\"./\">api</a> </li>\r\n                <li> <a href=\"./\">support</a> </li>\r\n                <li> <a href=\"./\">privacy/terms</a> </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"px-3 mb-3\">\r\n              <h3 className=\"mb-1\"> company </h3>\r\n              <ul>\r\n                <li> <a href=\"./\">about us</a> </li>\r\n                <li> <a href=\"./\">news</a> </li>\r\n                <li> <a href=\"./\">jobs</a> </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"flex-spacer\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr></hr>\r\n        <h4>© Copyright 2020 Al Yin.</h4>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Landing)","import React, { useCallback, useContext, useState, useEffect } from 'react'\r\nimport '../styles/Login.css'\r\n\r\nimport { HashRouter as Router, Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport FBase from '../firebase.js'\r\nimport { AuthContext } from '../auth/Auth'\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nconst Login = ({ history }) => {\r\n  const [inProp, setInProp] = useState(false);\r\n  const [login, setLogin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setInProp(true)\r\n  }, []);\r\n\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault()\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await FBase\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push('/app')\r\n      } catch (error) {\r\n        alert(error)\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const handleSignUp = useCallback(async event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target.elements\r\n    try {\r\n      await FBase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email.value, password.value);\r\n      history.push('/app')\r\n    } catch (error) {\r\n      alert(error)\r\n    }\r\n  }, [history])\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/app\" />\r\n  }\r\n\r\n  return (\r\n    <main className=\"fade-background\">\r\n      <CSSTransition\r\n        in={inProp}\r\n        timeout={300}\r\n        classNames=\"page\"\r\n        unmountOnExit\r\n      >\r\n        <div>\r\n          <div className=\"content-section-l\">\r\n            <Link to=\"./\" target=\"_blank\">\r\n              <h1 className=\"logo\"> wander </h1>\r\n            </Link>\r\n            <h3 className=\"credit\"> courtesy of kirokaze </h3>\r\n            <form onSubmit={login ? handleLogin : handleSignUp}>\r\n              <div className=\"flex pr-5 mr-5\">\r\n                <div className=\"login-card\">\r\n                  <label>\r\n                    <p>email</p>\r\n                    <input name='email' type='email' placeholder='' />\r\n                  </label>\r\n                  <label>\r\n                    <p>password</p>\r\n                    <input name='password' type='password' placeholder='' />\r\n                  </label>\r\n                  <span className=\"invis-button mb-4\">Forgot your password?</span>\r\n                  {login ?\r\n                    <div className=\"flex\">\r\n                      <button className=\"px-5 login-button\" type='submit'>login</button>\r\n                      <p className=\"ml-3 help-text\"> Don't have an account? <br />\r\n                        <span className=\"swap\" onClick={() => setLogin(false)}> sign up </span>\r\n                        |\r\n                        <span className=\"swap\"> terms </span>\r\n                      </p>\r\n                    </div>\r\n                    :\r\n                    <div className=\"flex\">\r\n                      <button className=\"px-5 login-button\" type='submit'>sign up</button>\r\n                      <p className=\"ml-3 help-text\"> Already registered? <br />\r\n                        <span className=\"swap\" onClick={() => setLogin(true)}> sign in </span>\r\n                        |\r\n                        <span className=\"swap\"> terms </span>\r\n                      </p>\r\n                    </div>\r\n                  }\r\n                </div>\r\n                <div className=\"card under-card ml-n3\">\r\n                  <p className=\"help-text\">\r\n                    Wander is in version 0.1.0\r\n                    <br />\r\n                    This means almost nothing works. But at least things look nice, so enjoy the rain while you can.\r\n                    <br /> <br />\r\n                    Keep in mind that you are currently using a unstable build that is only for prototyping purposes. Don't expect any data to persist to the next iteration. Do, however, expect bugs.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default withRouter(Login)","import React, { useCallback } from 'react'\r\nimport { HashRouter as Router, Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\nimport FBase from '../firebase'\r\n\r\nconst SignUp = ({ history }) => {\r\n  const handleSignUp = useCallback(async event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target.elements\r\n    try {\r\n      await FBase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email.value, password.value);\r\n      history.push('/app')\r\n    } catch (error) {\r\n      alert(error)\r\n    }\r\n  }, [history])\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"content-section-l\">\r\n        <Link to=\"./\" target=\"_blank\">\r\n          <h1 className=\"logo\"> wander </h1>\r\n        </Link>\r\n        <h3 className=\"credit\"> courtesy of kirokaze </h3>\r\n        <form onSubmit={handleSignUp}>\r\n          <div className=\"flex pr-5 mr-5\">\r\n            <div className=\"login-card\">\r\n              <label>\r\n                <p>email</p>\r\n                <input name='email' type='email' placeholder='' />\r\n              </label>\r\n              <label>\r\n                <p>password</p>\r\n                <input name='password' type='password' placeholder='' />\r\n              </label>\r\n              <span className=\"invis-button mb-4\">Forgot your password?</span>\r\n              <div className=\"flex\">\r\n                <button className=\"px-5 login-button\" type='submit'>sign up</button>\r\n                <p className=\"ml-3 help-text\"> Already registered? <br />\r\n                  <Link className=\"float-left\" to=\"/login\" >\r\n                    <span>sign in</span>\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"card under-card ml-n3\">\r\n              <p className=\"help-text\">\r\n                Welcome to wander.\r\n              <br />\r\n                Feel free to make an account or something. It's free after all.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default withRouter(SignUp)","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './Auth'\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext)\r\n  // console.log(currentUser)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render = {routeProps => !!currentUser ? (\r\n        <RouteComponent {...routeProps} />\r\n      ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default PrivateRoute","import React from 'react'\nimport './styles/App.css'\nimport './styles/bootstrap-spacing.css'\n\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport AppHome from './routes/AppHome'\nimport Landing from './routes/Landing'\nimport Login from './routes/Login'\nimport SignUp from './routes/SignUp'\nimport { AuthProvider } from './auth/Auth'\nimport PrivateRoute from './auth/PrivateRoute'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCoffee, faSignInAlt, faCode, faDesktop, faLanguage, faGlobeAmericas } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(faCoffee, faSignInAlt, faCode, faDesktop, faLanguage, faGlobeAmericas, fab)\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <div className=\"app\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Route exact path=\"/\" component={Landing} />\n          <PrivateRoute exact path=\"/app\" component={AppHome} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n        </Router>\n      </div>\n    </AuthProvider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}